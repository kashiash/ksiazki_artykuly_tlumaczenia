 OK, następni są Jory i Noah z Font Awesome. Są tutaj, aby podzielić się tym, jak narysowali 30 000 - tak, dobrze słyszałeś - 30 000 ikon w Figma. I te ikony są teraz używane na ponad 200 milionach stron internetowych na całym świecie. Już jestem pod wrażeniem. Zamierzają pokazać, w jaki sposób korzystanie z Figma dla rodziny ikon umożliwiło głębszą współpracę, pracę zespołową i myślenie systemowe. Co więcej, myślę, że wasze zespoły też się czegoś nauczą. Proszę więc o wielkie brawa dla Jory'ego i Noah. Witam wszystkich. Cześć. Wow. Wszyscy wyglądacie fantastycznie, a szczególnie ludzie online. Dziękuję, że się tak wystroiliście. Tak, uwielbiam to. Dziękuję. Po pierwsze, cześć. Jesteśmy - ja jestem Jory, a to jest Noah tutaj. I pomyśleliśmy, że aby się przedstawić, może być trochę łatwiej dać biografię siebie nawzajem, napisać własną biografię. Ponieważ pisanie własnej biografii nie jest zabawne, jak pewnie wszyscy wiecie. Ciężko było nam to zrobić nawet dla strony Figma. Na początek przedstawię więc pana Noah Jacobusa. Tak. To jest Noah. Jest fantastycznym projektantem ikon i ilustratorem, pochodzącym z Grand Rapids w stanie Michigan. Przez lata pracował dla wielu niesamowitych firm, w tym Metalab, Google, a nawet dla Figma. Noah, nie wiem, czy - jeśli śledzisz go w mediach społecznościowych, wiesz, że Noah prawdopodobnie ma - ma niezdrową obsesję na punkcie koloru żółtego. Wiem, że teraz ma na sobie niebieską koszulkę. Ale to po to, by cię zmylić. Bo jeśli spojrzysz na jego buty... Dzisiaj ograniczamy się do sznurowadeł. Spokojnie. Masz jakieś inne żółte? 



Może. Nie, nie powiedziałby. Tak, nie powiedziałby mi, gdyby to zrobił. W każdym razie Noah jest fantastycznym projektantem ikon, który wnosi przemyślenie i kreatywność do wszystkiego, co robi. Noah, tak się cieszę, że jesteś w zespole Fawn Awesome. Proszę, wszyscy pozdrówcie Noah. Oh. Dziękuję. A to jest Jory Raphael. I ma siwe włosy. Tak. Czy to wszystko, co napisałeś? Właściwie zapomniałem, że robimy tę część. Więc kontynuuj. Nie, w porządku. W porządku. W porządku. Tak, nie, nie. W każdym razie, po prostu pójdziemy dalej. OK, więc dziękujemy za dołączenie do naszej rozmowy. Narysowaliśmy 30 000 ikon w Figma i ty też możesz. Teraz, aby uzyskać nieco więcej kontekstu, możesz rzucić okiem na to, o czym myśleliśmy podczas przygotowywania i pisania tego wykładu. Pomyśleliśmy, że podzielimy się kilkoma alternatywnymi tytułami, o których myśleliśmy. Możesz więc rzucić na to okiem. Tak, jak ten, absolutnie ostateczny przewodnik po tym, jak rysować ikony w Figma. Pomyśleliśmy, że to może być trochę zbyt górnolotne, nie wspominając o oczywistej nieprawdzie. Mm-hmm. Utrzymanie biblioteki z ikoniczną pewnością siebie. Nie? Nie. Nie. A potem, wiesz, ups, wszystkie ikony. Które, wiesz, ikony są jak, ale wiesz. Ale niezależnie od tytułu, jest to rozmowa o bardzo małych obrazkach. Ikony, piktogramy, ideogramy, jakkolwiek chcesz je nazwać, kochamy je i mamy szczęście spędzać nasze dni na ich tworzeniu. Noah i ja pracujemy dla Font Awesome. 



Font Awesome to biblioteka ikon i zestaw narzędzi, który jest używany na ponad 200 milionach stron internetowych na całym świecie. A naszym celem w Font Awesome jest pozbycie kłopotów związanych z używaniem ikon na twoich stronach internetowych, w twoich projektach i w twoich aplikacjach. Innymi słowy, naszym celem jest oszczędzanie czasu ludzi. Teraz wiem, że używamy ikony dyskietki do reprezentowania zapisu w roku 2023. Po prostu sprawdzam, czy nadal nie śpicie. Tak dobry jesteś. Teraz to, przez co dzisiaj przeprowadzimy - dziękuję - to ostatecznie, w jaki sposób oszczędzamy czas w Font Awesome, systemy, których używamy i jak jeszcze bardziej ułatwiamy tworzenie ikon, zarówno dla nas samych, jak i dla każdego z was, którzy są zainteresowani tworzeniem własnych ikon lub utrzymaniem biblioteki ikon. Ale jak możesz w ogóle myśleć o oszczędzaniu czasu, kiedy gapisz się w dół beczki pustego płótna z ikonami? Od czego w ogóle zaczynasz? 



Ustalając swoje zasady, ograniczenia i inne względy projektowe tak wcześnie, jak to możliwe. Teraz, tak jak w każdym systemie projektowania, systemy ikon składają się z wielu spójnych i wielokrotnego użytku części. I tak jak w przypadku każdego systemu projektowania, musisz wcześnie włożyć czas, aby dowiedzieć się, gdzie możesz zaoszczędzić więcej czasu w przyszłości lub, jak mówimy w Font Awesome, zwolnić, aby przyspieszyć. I tego rodzaju myślenie sięga aż do samych korzeni samej ikonografii, wspaniałej siatki. Teraz siatki są świetnym fundamentem, aby wszystko było spójne i dostępne. Nawet dzisiaj, w roku naszego Pana 2023, nie wszyscy używają fantazyjnego wyświetlacza o dużej gęstości. A upewnienie się, że używasz siatki pomoże ustawić rzeczy i upewnić się, że ikony, które tworzysz, są tak użyteczne, jak to możliwe dla jak największej liczby osób. A kiedy już osiedlisz się na siatce, może ładnej 24-pikselowej, takiej jak ta, możesz użyć kluczowych kształtów, aby pomóc utrzymać równowagę ikon, gdy są widoczne i używane razem jako zestaw, niezależnie od ich części składowych. Teraz, w zasadzie, ikony są oparte na garści podstawowych sylwetek. Masz swoje kwadraty, okręgi, poziome prostokąty i pionowe prostokąty.



I oczywiście, jest rozbieżność w tych wszystkich rzeczach. Ale takie wytyczne pomogą zachować harmonię różnych kształtów. To bardzo przypomina projektowanie czcionek w ten sposób. Teraz, aby uzyskać szybki przykład tego, jak pomagają, spójrzmy na okrąg i kwadrat. I jestem pewien, że widziałeś setki, jeśli nie tysiące, ikon opartych na tych bardzo prostych kształtach. A kiedy je robisz, twoim pierwszym instynktem może być, aby ich ogólne wymiary były takie same. Dlaczego nie? Ale to, z czym mamy tu do czynienia, to coś więcej niż tylko wymiary. Mówimy o gęstości wizualnej. A kiedy już wypuścisz te ikony na wolność i zostaną gdzieś wykorzystane, jak te dwa kształty będą się układać? Cóż, szybką małą sztuczką, którą możesz zrobić, jest może dodanie rozmycia do swoich ikon lub trochę rozfocusowanie oczu. Albo jeśli jesteś taki jak ja, możesz zdjąć okulary i nic nie widzisz. A kiedy to zrobisz, kwadrat będzie niezmiennie cięższy niż koło, ponieważ te dodatkowe małe rogi mają zaskakujący cios. Spróbujmy więc użyć kluczowych kształtów, aby znaleźć coś nieco bardziej zrównoważonego. Jeśli będziesz mieć oko na kwadrat, po prostu trochę go ściśniemy. Czuje się trochę lepiej, prawda? Kiedy mamy do czynienia z kształtami na tak małą skalę, golenie nawet kilku pikseli może mieć ogromne znaczenie. Oczywiście są to tylko podstawowe punkty wyjścia, ale nadal stanowią świetną podstawę do spójności. I można je łatwo przetłumaczyć na różne piktogramy w dowolnych stylach, pomagając kierować tym, jak ich formy odnoszą się do siebie nawzajem. Może coś trochę bardziej squishier, jak ten. A może solidny, potężny zestaw ikon konia roboczego, który jest dostępny w wielu stylach dla każdego przypadku użycia. A może coś trochę blokowego lub trochę bardziej retro. A może coś inspirującego kaligrafią, może bardziej jak pióro z końcówką dłuta. Albo co z ikonami, które mogłyby być nawet ich własnymi przyciskami? Naprawdę żyjemy w epoce cudów.



Właściwie to daje mi pomysł. Chcę spróbować czegoś ze wszystkimi, trochę udziału publiczności. Niezależnie od stylu, jest kilka podstępnych drobiazgów, które robimy, gdy tworzymy zestaw ikon lub sprawdzamy go pod kątem niespójności. I prawdopodobnie wszyscy widzieliście interfejsy, w których jedna lub więcej ikon nie wydaje się do końca pasować. Może nie zostało to zrobione całkiem dobrze, albo dzieje się miszmasz stylów. Zobaczmy więc, czy możemy wszyscy współpracować, nawet ty, aby zobaczyć, czy uda nam się znaleźć jakichś oszustów. Więc zaczniemy od łatwego. Więc na razie zignoruj to, co reprezentują ikony. Porozmawiamy tylko o stylu. Jedna z tych rzeczy nie jest taka jak druga. Jeśli myślisz, że wiesz, co to jest, śmiało wykrzykuj to wszystko razem, aby ludzie online też mogli usłyszeć. Co o tym sądzisz? Który z nich nie do końca pasuje? Trzy. Numer pięć. Podstępny. Tak, numer trzy, ten krab nie ma wystarczająco dużo mięsa na kościach. Nie, czekaj. Kości? Prawie wszyscy mieli rację, z wyjątkiem jednego z was. Porozmawiamy z tobą po zajęciach. Spróbujmy czegoś trochę trudniejszego. Ten ma ciekawą mieszankę zarówno okrągłych, jak i ostrych elementów.



Ale wszystkie końcówki udaru, te terminale, powinny być nadal traktowane w ten sam sposób. Jak myślisz, który z nich nie do końca pociąga za swoje ciężary? Jeden? Czy wszyscy jesteście projektantami? Wiesz, co robisz. Tak, numer jeden, coś się tam dzieje w prawym dolnym rogu. Zrobimy jeszcze jeden. Wracając do małej gąbczastej ikony ustawionej tutaj. Ale nie wszystko jest gąbczaste w Raju. Jeden z nich trochę wystaje. Jak myślisz, jaki może być problem? Dwa. Trochę więcej podziału na ten temat. Z jakiegoś powodu wierzch tego trofeum jest trochę ostry. Ktoś się tam włamał i złożył. Tak więc w zasadzie dobra robota. Dajcie sobie rękę. To naprawdę dobrze. Chodzi mi o to, że to szczerze mówiąc dużo sedna pracy, jeśli chodzi o utrzymanie spójności zestawu ikon, wiele z tych małych rzeczy. Lub kiedy, powiedzmy, odtwarzasz całą bibliotekę ikon od podstaw w nowym stylu. Ale kto by kiedykolwiek zrobił coś takiego? Zrobiliśmy. A wszystko dlatego, że kilka lat temu w filmie wprowadzającym Font Awesome 6 złożono małą obietnicę, że w końcu zostaną dodane ostre ikony. Nie wiem, odważny czy lekkomyślny, aby obiecać coś takiego? Cóż, ponieważ pozwoliło mi to oszukać Font Awesome, aby mnie zatrudnić, powiem to drugie.



A kiedy wszedłem na pokład, to ode mnie zaległo, czy pomogę w wychowaniu naszej nowej, małej, ostrej rodziny. A nasza praca nad ostrym faktem zaczęła się od podsumowania tego, co sprawia, że klasyka Font Awesome jest niesamowita. Jakie są zasady, które utrzymują to wszystko razem w dużą, szczęśliwą rodzinę? A jakie są niektóre z tych stylistycznych atrybutów, o których rozmawialiśmy zaledwie sekundę temu, a które moglibyśmy zidentyfikować? A kiedy już przygwoździliśmy niektóre z tych szczegółów, wiedzieliśmy, co możemy poprawić, aby zrobić coś nowego i chrupiącego, a jednocześnie wciąż znanego. Ale wiesz, jest wiele wyborów, których musisz dokonać, odtwarzając całą bibliotekę ikon w nowym stylu. Decyzje, które podejmujesz dla ikony numer trzy, niekoniecznie będą już wstrzymywać, gdy dojdziesz do ikony numer 3000. Więc zrobiliśmy to samo, co ty w resztki nocy. Wzięliśmy wszystko, wrzuciliśmy do dużego garnka, zamieszaliśmy i zobaczyliśmy, jak smakuje, co naprawdę oznaczało, że zmieszaliśmy wszystko w gigantyczną siatkę i wielokrotnie sprawdzaliśmy pod kątem spójności, co dodaje czas do produkcji. Ale jest to bardzo przydatne, aby zapewnić spójność w całych stylach. A sprawdzenie wszystkich naszych atrybutów na początku na tym etapie naprawdę pomogło przyspieszyć wszystko do końca rozwoju dla ostrych, stałych, ostrych regularnych, które wierzę, że mają ostre precle w hali gastronomicznej, ale ich nie polecam. Przetną ci usta na wstążki. Nasz ostatni wydany ostry styl, ostre światło, a wkrótce, trzymam kciuki, ostre cienkie. Gdyby na scenie było tu krzesło, na którym mógłbym usiąść do tyłu jak fajny doradca, zrobiłbym to. Ale wiesz, bo bucko, zasady rządzą, jeśli chodzi o ikony.



Przyjmowanie ograniczeń jest jedną z najcenniejszych rzeczy, które możesz zrobić w projektowaniu ikon lub dowolnym projekcie. I nie tylko zaoszczędzi ci to mnóstwo bólów głowy, jeśli oboje je zaplanujecie i zrozumiecie, ale pozwoli to, aby twoja kreatywność rozkwitła, gdy już zawęzisz swój zakres. Tak. Proszę o to. Powiedziano nam, że musisz przybijać piątkę, kiedy masz wyłączony zatrzask. Więc teraz, jeśli używanie reguł do tworzenia ikon oszczędza nam czas, co z zasadami, które tworzą ikony? Jak sednoziarniste rzeczy, jedynki i zera, matematyka. Teraz nie jestem matematykiem. OK, jestem projektantem ikon. Wiem, że pewnie wyglądam jak jeden. Ale Noah, czy jesteś matematykiem? Nawet nie blisko. Nie. Pewnie nie powiedziałby mi, gdyby był. To podstępny, podstępny człowiek. Zresztą nie jestem matematykiem. Ale wiesz, kto jest matematykiem? Ten facet. To jest pan George Boole. Jest angielskim matematykiem, który w 1854 roku położył podwaliny pod logikę boolską, czyli logikę binarną, która jest podstawą współczesnych obliczeń dzisiaj. Teraz logika logiczna opiera się na zasadach prawdy i fałszu, tak lub nie, jeden lub zero, George Boole czy George Coole. Teraz nazywam go George'em Coole'em, ponieważ jego logika Boole'a, cóż, pomaga nam tworzyć niesamowite ikony. Jak to, pytasz? Cóż, z tymi narzędziami. OK, to są narzędzia Pathfinder. 



Znajdziesz je w większości aplikacji do edycji wektorowej. I używają operacji logicznych, aby powiedzieć kształtom, jak wchodzić ze sobą w interakcje. Teraz opcje to zazwyczaj łączenie, odejmowanie, przecinanie i wykluczanie. W interfejsie użytkownika Figma znajdziesz te narzędzia u góry ekranu Figma w tym małym menu rozwijanym, gdy masz zaznaczone wiele kształtów. Jak to więc działa w praktyce? Jak używamy tych narzędzi, aby pomóc nam tworzyć niesamowite ikony? Cóż, to zabawne, że powinieneś zapytać, ponieważ mamy ten proces w kolejce właśnie tutaj. To prawie tak, jak to zaplanowaliśmy. Więc zaczniemy od małego kręgu tutaj. To jest tryb konspektu. Możesz zobaczyć tam wszystkie małe węzły wektorowe, które utworzyły ten okrąg. To ulubiony tryb Noego na całym świecie. Tak, jest bardzo szczęśliwy. Teraz narysujemy kolejny okrąg na szczycie tego koła. A potem użyjemy polecenia odejmowania, które polecenie Pathfinder, tej operacji logicznej tam, aby odjąć górny kształt od dolnego kształtu. I pozostaje nam półksiężyc, czyli jak lubimy mówić w projektowaniu ikon, księżyc. W porządku, narysujmy coś nieco bardziej skomplikowanego. Przedstawiam ci ikonę budzika. Zobaczmy więc, jak to zostało zrobione. Zaczniemy od tego samego kręgu. A potem narysujemy i zarysujemy wskazówki zegara. Zamierzamy odjąć je od głównego kształtu. Następnie narysujemy i zarysujemy małe stopy. Potem narysujemy kilka dzwonków na wierzchu. Zrobimy z tego małe wycięcie. Zamierzamy odjąć to od dzwonków. A potem w końcu połączymy wszystko razem, połączymy wszystko razem w ostateczną ikonę. Więc jeśli zajrzymy za zasłonę tej ikony, wrócimy do trybu konspektu. Noah jest teraz naprawdę, naprawdę szczęśliwy. Mamy jeden eksportowalny kształt, złożoną ścieżkę. 



Wszystko zostało połączone. Możesz dostarczyć to swoim klientom. Możesz przesłać to do współdzielonej biblioteki, et cetera, et cetera, et cetera. Ale czekaj. Co jeśli popełniłeś błąd z tą ikoną? Chcesz dokonać zmiany. Chcesz mieć kwadratowe zaślepki zamiast zaokrąglonych. Chcesz, aby zegar odczytywał godzinę 3 zamiast 4.30. Więc niestety, ta ikona, jak ją właśnie opisaliśmy, została stworzona przy użyciu szeregu destrukcyjnych kroków. Wszystkie uderzenia zostały nakreślone. Kształty zostały wycięte. Wszystko zostało w końcu połączone. Więc gdybyśmy chcieli dokonać zmiany w tej ikonie, nie wiem, musielibyśmy ją przerysować. Musielibyśmy użyć Command-Z, wróć, dopóki nie zrobimy tych wszystkich kroków, zanim wszystko zostanie połączone. A jeśli to zrobimy, czy zachowamy wszystkie te indywidualne kroki, oryginalne rzeczy, które stworzyliśmy, czy też zachowamy wyeksportowaną ikonę? Czy trzymamy je w jednym pliku, w wielu plikach? Czy trzymamy je w różnych folderach? Co robimy? Jak my-- co jest źródłem prawdy? To wszystko jest bardzo, bardzo, bardzo frustrujące. Ale wspaniałą wiadomością jest to, że z Figma, tak naprawdę nie musisz dokonywać tego wyboru. Ponieważ Figma traktuje logikę pana George'a Boole'a trochę inaczej niż wiele aplikacji. Narzędzia Pathfinder w Figma są znane jako grupy logiczne lub, jak lubię mówić, grupy Coolean. Teraz, nie wiem, nie zwracałem zbyt szczególnej uwagi wczoraj podczas przemówienia, ale myślę, że pośród całej rozmowy o zmiennych i wszystkim, to było-- to jest oficjalna zmiana nazwy, prawda? Tak, Dylan o tym wspomniał. Jest w następnym wydaniu.

Tak, tak, możesz na to czekać. A Figma, jeśli nie, to darmowy prezent od nas dla Ciebie. Tak więc w Figmie grupa logiczna jest jadalna. To znaczy, edytowalne. Albo- to jedno z tych słów, które w pewnym sensie tracą na znaczeniu. Ale myślę, że gdybyśmy rzeczywiście mogli użyć tego jako metafory. Bo myślę, że grupa logiczna, dobry sposób na wyjaśnienie tego, jest jak przepis. Wyobraźmy sobie więc, że mieliśmy możliwość wykorzystania grupy logicznej w prawdziwym świecie, w tym magicznym świecie, w którym żyjemy. I chcieliśmy, nie wiem, stworzyć szarlotkę, zrobić szarlotkę. Więc gdybyśmy tworzyli szarlotkę przy użyciu grupy logicznej, zebralibyśmy wszystkie nasze składniki razem, jabłka, cukier, mąkę i tak dalej, twoje pociągnięcia, twoje kształty, twoje końcowe czapki. Zmieszalibyśmy je razem, OK? A potem upieklibyśmy to idealnie. [GRANIE MUZYKI] Aha! [ŚMIECH] Masz uroczą szarlotkę. Pysznie pachnie. Jest po wyjęciu z piekarnika. Został stworzony przy użyciu grupy logicznej. Zaraz wciniesz się w to, żeby mieć kawałek, i zmienisz zdanie. Decydujesz, że nie chcesz już szarlotki. Chcesz ciasto wiśniowe. Cóż, na szczęście ta sztuczna szarlotka została stworzona przy użyciu grupy Boolean. Więc to jest właściwie-- to jest możliwe. Właściwie można było sięgnąć do szarlotki, zamienić jabłko na wiśnię, a ciasto nadal byłoby w pełni upieczone, gotowe do spożycia i pachniało pysznie. Więc grupa logiczna jest zasadniczo jak przepis, który można edytować, prawda? Wracajmy więc do naszego budzika. Oznacza to, że w Figma nie musisz wybierać między ostatecznym a edytowalnym. Z grupami logicznymi, dostajesz oba. Kształty i pociągnięcia pozostają nienaruszone, a następnie wyeksportowany SVG jest nadal pojedynczym kształtem. Możesz mieć swoje ciasto i też je zjeść.





[LAUGHTER] Yeah, thank you. OK, moving on. Anyway, in the context of the Figma user interface, so a Boolean group is essentially like an expandable layer group, OK? So that top layer there is the-- if you export that, that becomes an SVG. That's a single compound path. But each of the interior layers use Boolean operations to tell those shapes how to interact with one another, the unions, the subtractions, et cetera. And the best part about all of this, the thing that makes us as icon designers, like, you know, giddy, is that you can combine strokes and shapes in a Boolean group. You don't have to outline the strokes first. So that means that even though you get the single exported shape as an SVG, within the Boolean group itself, you can change those little footsies to be squared end caps. You can make the clock hand use a wider width if you want. You can make all these editable changes, which is amazing. Now, Boolean groups are great, OK? Because of what we just talked about, they save us a ton of time. And it allows us to update icons on the fly, which is important for us at Font Awesome, because we have what we like to call a living library. And that means that as time goes on, we have the ability to release new versions and that change is possible. So this is the user icon from version 4 of Font Awesome. You've probably seen it all over the internet. Got the little hunched shoulders there. So this is actually my introduction to Font Awesome before I worked for the company. It's everywhere. No, Dave, I'm not changing the slide yet. It's a great little icon. Now, when we released version 5 of Font Awesome, we made some minor changes to the icon. We massaged the shoulders a bit, drooped them down, got some tension out of there, made the head a little bit bigger. And then actually further on in version 5, we made some even further changes to make it a little bit more readable at smaller sizes, and actually ultimately to make it work better with different variations. And then finally, this is the version 6 user icon for Font Awesome. This is what's out there today. It's live today. It's a little more flexible, a little bit more cleaner. Now, all four of these icons were drawn from scratch. And that's fine. There are only four icons here. It didn't take us a ton of time. But with version 5, we made a number of variations to that user icon here. And then version 6, we made all those same variations, but in the new, simpler style, plus a whole lot more. We have a ton of different variations here. We've got a little Shakespeare icon there up in the top corner, all different stuff. So what if we wanted to make a change to that user icon? Or we need to release a new version or fix an issue? Well, as we said, thankfully, this icon was created using a Boolean group, so change is possible. So the icon's still editable. So if we were to-- I don't know what-- if we wanted to add a mullet to all of our user icons, we could. It's a Boolean group. It's pretty easy. You can just make a few minor changes here and there. But I'm looking at you, and I know you're looking at me, and you're looking at that mullet up there, and you're thinking to yourself, Jory, I bet you'd look great with a mullet. JORY BURKE: Prove it. I will. Yeah. Yeah, I spent way too much time customizing an Apple Memoji. That hairstyle doesn't exist, so I had to make it from scratch. Now, OK, what if we wanted to add a mullet to all of our user icons? Now, even with a Boolean group, we'd still have to change every single icon one by one. It would take forever. So if only there were a feature in Figma that allowed us to reuse elements across designs. I mean, I think there is. There is? Yeah. There is. They're called components, which you're probably familiar with. Now, if you use components in Figma, you likely use them for user interface elements, like your buttons or your cards or your menu items, et cetera. You can even use them to swap out icons. But the key for us as icon designers, the game changer, was when we realized that you could combine components and Boolean groups together. This means that with icon design, we have the ability to reuse elements across icons that share a similar base. So like in the case of this car icon here, if we were to turn this car into a component, we could then create an instance, different instances of that component. And if we wanted to, we could add, I don't know, side view mirrors to one of the cars. We could add a little sign on top to make it into a taxi cab. And then because the base is a component, we could merge it together using a Boolean group. And then we're left with three unique icons. Now, in the Figma UI, those are those little expandable layer groups there. The component of the car is that base. And then in the case of both of these icons here, we've used the union command to merge those extra elements with it. And if you export that top layer there, you have a single compound path. And this is great, because it means that if you make a change to that base component there, that that car, it cascades to all the instances that use the same component. So it makes updating icons when you have different variants of them, or you want to make a new style, well, it makes it as easy as pie, which is a callback for any of you paying attention. Here. So back to the user icon. So if we were to turn this user icon into a component, we could then add some modifying elements to it. That base element becomes the component that remains consistent across all of the variations. And under the hood, essentially what we've created here is we're using that component. We have a little element here that we're cutting out. And then we use subtract to punch out of that main shape there. And then we have a unique element, this gear, that we're going to union together. But this got us thinking, that gear is pretty handy. Like, what if we wanted to add that gear to a lot of icons, or different icons, or make that possible? So we thought, what if we turn each of those elements into components? Because then everything becomes modular. Now, the big caveat here is you don't need to do this for every single icon. This is super helpful for those that you know are going to have multiple variations, or you're going to want to reuse a number of times, which we do in Font Awesome to give folks as many options as they can have. It saves us a ton of time. And because now each of those modifying elements there, those little things hanging off the corner, are components, we can then add different base icons to those modifiers as well. And then the changes, if you make them to either thing, will cascade across all instances, which makes updates super, super easy, and especially if you want to make a new style. And yes, we can now add that mullet to all of our user icons. We could. My clicker works. There we go. See? I told you. It's great. So OK, how does this actually work in practice? Well, we've essentially created unique components for all of our core icons and all of our modifiers. And the style and family variants within Font Awesome are actually baked right into those components as variants. We're using a shared library in Figma, which means that we can make updates and it cascades to all of our different files. And then you can see here that you can swap out this Boolean. This is the actual Boolean group that's created already. And within that Boolean group, you can pop in there and change the modifier to something else. You can change the style to something else. It saves us a ton of time. And internally, I'm going to ask that this doesn't leave this room, or for folks watching from their own homes, please keep this hush-hush. But we have a code name for this. And that code name is Font Awesome Reusable Tidbits and Shapes, which is-- probably figured-- farts. Now, at Font Awesome, we have a lot of farts. And although it would be possible to add a fart to every single one of our icons, I know it's impractical, OK? It'd take a lot of time. We've talked about this is all about saving time. So we don't want to add that to every single icon. But we want to allow people to add a fart to every single icon. So instead of doing this manually, instead of Noah and I sitting there at our computer, manually adding it to every single icon, we bottled up our farts. And we magically transformed them into what we call the Icon Wizard. And the Icon Wizard is this little customer-facing tool that you can access from our website that allows you to easily add a modifier to any single Font Awesome icon on an as-needed basis. Then you save it to a Font Awesome kit. You can download it. You can serve it up just like any other icon. Now, under the hood, this Icon Wizard is actually using the exact same Boolean operations that Figma uses to create your different pathfinder, your different shapes there. Now, as I said earlier, I'm not a mathematician. But I think that would be a lot-- a lot of icons would be possible with this. Like, Noah, if we were to take-- oh, you did have more yellow on you, you jerk. If you were to take all of our icons, all of our styles, all of our icon families, all the modifiers, the new modifiers we're working on, some of the new icons we're working on, that would be like how many icons? I don't know, like 750,000, give or take. Yeah, so I mean, you could say that we drew 750,000 icons in Figma, and so can you. I mean, even me? Even I could do that? Noah, even you. I mean, that's really great, because-- No, we got to high five first. All right, you deserve it. OK. Because that is a lot of farts for just one person to handle, which is no laughing matter. I don't want to hear it, OK? Organizing such important material requires the utmost care and attention, OK? We realized we needed somewhere very special to hold our farts. Keeping everything together was the smart play for managing all those itty bitty pieces in both the classic and sharp styles, like the base icons, facial elements for emoji, people in poses that get used all the time, the cutouts to subtract the negative space around modifiers, all the modifiers themselves, and lots of other little elements that get overlaid onto icons sometimes. And here's a little-- a brief slice of it in all its glory. Excited to see what we can do with some of the new variable features on this too. But now by adding sharp, we doubled our icons. And it was clear that, unlike our farts, one giant file was not going to cut the cheats, OK? Thank you. I worked hard on that one. With me coming on board and all of these new collaborative tools and processes at our disposal, there had to be a better way. We had to let them be free. Now for a little context, our icons are organized into roughly 25-ish different Figma files. And this helps speed things up when it comes to adding new icons and editing existing ones, but also helps with library publish times and file load times. But we really wanted an easy way to track changes across all these files without having to rely on extra layers of complexity or plugins or anything like that. So we put our heads together, Jory and me, and we realized we could do a lot with a little. The humble file thumbnail. And in Figma, that categorization looks a little bit like this in the midst of our sharpening process. And here's a quick peek at how that looks in action. So for every category, we had a component with variants set up within it so we would know when-- before work had begun on a specific category. And then once someone had started making progress, we could easily dive in, change its status and color, and go style by style and family by family and toggle on what work had been completed so that we could see at a glance at any point in our whole library how things were going. And then once that category was completed-- turned nice and green-- and then after that point, if we have any changes that need to be updated in our database or other things that change, we can add a nice little flag at the top right so that we can keep track of everything that's going on. And these days, this is how things are looking. Green and clean, baby. And we'll-- well, I see what you're saying. NOAH LEVINSON: It's just a button, Noah. You just have to click the button. NOAH LENGSTORF: I'm afraid of the button. Even though these files are separate, though, we still publish everything together as an icon component library so that everybody's working with the latest assets. No matter who they are in the company, marketing, development, design, everybody's working on the same page. Now, in the background there, you might tell that there's a couple of different colored columns of icons. And that's because we use a very simple, lightweight color coding system so that we can track the status of any given icon, regardless of which of those 25 files it lives in. And I'll tell you more about it now. Using this lets us see at a glance what was next on deck, for example, as we progressed through sharpening the entire library. Or we could easily grab any type of icon all at once with Figma's color selection targeting. Now, of course, this kind of lightweight approach only relying on color isn't going to work for everybody. But it's just small and lightweight enough that it works for the two of us. As an example, most categories, they look like this now. Classic and sharp, side by side, and delicious flame-broiled harmony. But sometimes the editing goes wrong. Maybe an icon, something goes wrong with the editing, or something doesn't mesh into a Boolean group quite right. Or maybe you stepped away for only five minutes and somebody stole your French fries. I was hungry. So we can flag that one red. I love technology. It's so great. Maybe the base glyphs for only a couple of styles has changed, like maybe in your solid and your duotone styles. So those have to be updated in your database, too. So we can flag those easily. Or maybe in the midst of the sharp build-out, we could easily duplicate all of our classic icons and flag them yellow so we knew which ones still needed to be sharpened. Or maybe a hot new drink flavor comes out on the scene and you've just got to add it to your icon library. So we can flag those as blue. Blue for new, I think. That was the thought process behind that. And now that all these systems are set up and functional, it makes adding new modifiers and icons easy as pie. That's a third callback, in case you were keeping track. Thank you so much. You have become the master. The power. Let's move on. But no joke, building a system for updates in organization makes working at scale so much easier. All right, speaking of scale, so we have this whole large icon system. And that's great for us in Figma for building icons. But what about actually using the icons? And specifically, what about using icons in Figma? So you may have noticed, and we mentioned earlier, but we work at Font Awesome. And there is a specific part of that name, the font, that I want to focus on here for a second. Because Font Awesome, when it was originally created back in 2012, took advantage of web font technology to serve icons kind of the same way that you serve typefaces. And over the years, we have a lot of new ways to use icons. We have SVGs, et cetera, et cetera. But one way that we still actually take advantage of those fonts is with our desktop files, the OTF font files that are available in a ton of different formats. But the thing in the OTF font files that we really use are the ligatures. And now, ligatures, if you're familiar with typography, it's like when you write the letters F and L, you'll see them sometimes merge together into a single glyph there, the little combined shape, the little full-- yeah? I don't know. Anyway, so we're using that same technology. But instead of changing an F and L to a full, we're changing the word house into a house. So if you just type the name of the icon, it swaps out the glyph, which essentially means we've packed our entire icon library into a typeface. And what's really cool is that Figma actually has Font Awesome 5 free and Font Awesome 6 free installed by default. So you have access to this today if you're using Figma. This is in your Figma interface. So we thought, what if we took that technology and the fact that it's installed in Figma by default and used components to make it even cooler? So we did. It's available in the Font Awesome community. It's our Font Awesome official icon component. And it harnesses ligatures and then also component variant properties, and more specifically, the text variant property, to allow us to let you easily swap out one icon for another. And it looks like this in practice. Basically, you can type a different icon name in that bottom field there, and it'll swap out the icon. We have style, padding, and scale baked right into it. And we actually use this internally all the time for all of our user interface design, because this is one little thing that you can cut and paste and just reuse over and over again. And essentially, we've basically packed our whole icon system, not just the individual families, but the whole system into a single Figma component, which saves us a ton of time. And that's kind of what we want to leave you with, that when you look at our entire system for creating and delivering icons, from the file organization, those thumbnails that Noah shared, to the components, Boolean groups, styling, and key shapes, all the way down to the itty-bitty little icon grid there, it's all about saving time so that we can focus on what's most important. That's right, a well-balanced breakfast. I mean, icons. Yeah. Icons. And we do that by building just the right amount of structure that works for us, being flexible enough to allow exploration still, but both befriending and being creative within our constraints. You know, going back to the beginning, maybe we should have named our talk something a little bit different. Maybe the real friends were the icons we made along the way. No, no, no, scratch that, reverse it. Yes, the real icons were the friends we made along the way. Yeah. Thank you so much for joining us for our talk. Have a lovely rest of config. See you later. [MUSIC PLAYING] (upbeat music)